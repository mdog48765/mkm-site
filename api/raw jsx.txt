raw jsx

import React, { useMemo, useState } from "react";

/* ===== Business info ===== */
const CONTACT_EMAIL = "michaelkylemusic@icloud.com"; // display-only email
const PIZZA_RECORDS_EMAIL = "pizzarecords@aol.com";
const BUSINESS_PHONE_DISPLAY = "(217) 883-0078";
const BUSINESS_PHONE_TEL = "+12178830078";
const PIZZA_RECORDS_PHONE_DISPLAY = "(217) 200-0896";
const PIZZA_RECORDS_PHONE_TEL = "+12172000896";
const VENUE_ADDRESS = "59 E Central Park Plaza, Jacksonville, IL 62650";
const LOGO_SRC = "/thumbnail_MKM%20Entertainment%20logo.png"; // file is in /public

/* ===== Gallery images (in /public/gallery) ===== */
const GALLERY_IMAGES = [
  "/gallery/event1.jpg?v=1",
  "/gallery/event2.jpg?v=1",
  "/gallery/event3.jpg?v=1",
  "/gallery/event4.jpg?v=1",
  "/gallery/event5.jpg?v=1",
  "/gallery/event6.jpg?v=1",
];

{/* About Section */}
<section id="about" className="bg-black text-white py-16 px-6">
  <div className="max-w-6xl mx-auto flex flex-col md:flex-row items-center gap-10">
    {/* Photo */}
    <div className="flex-shrink-0 w-full md:w-1/3">
      <img
        src="/images/michael-mixing.jpg"
        alt="Michael Kyle mixing a live event"
        className="rounded-2xl shadow-lg object-cover w-full h-auto"
      />
      <p className="text-sm text-gray-400 mt-2 italic text-center">Humble Beginnings</p>
    </div>

    {/* Text */}
    <div className="flex-1">
      <h2 className="text-3xl font-bold text-red-600 mb-6">About MKM Entertainment</h2>
      <p className="mb-4">
        MKM Entertainment started with a small, well-used, “Frankensteined” sound system and a mission:
        deliver affordable, quality sound to anyone ready to step into the world of live entertainment.
        From weddings to raves, rock shows to hip hop nights, and everything in between — we’ve done it all.
      </p>
      <p className="mb-4">
        Now in our third year of professionally running sound and lighting, we’ve grown into a trusted partner
        for events across Illinois. We specialize in EDM but have built a reputation for rocking metal,
        hip hop, and everything in between.
      </p>
      <p className="mb-4">
        While we don’t currently handle sound for crowds over 400, we’re scaling toward serving all markets — big
        and small — with the same focus: quality production at fair prices. Our QSC rig is crystal-clear, plenty loud,
        and dynamic enough to deliver perfect sound for everything from speeches and corporate events to local music festivals.
      </p>
      <p className="mb-4">
        We believe the entire process — from booking to showtime to teardown — should be streamlined and stress-free.
        Professionalism and customer care go hand-in-hand, and clear communication is at the heart of everything we do.
      </p>
      <p className="mb-4">
        Our partnership with Pizza Records has been pivotal to our growth, allowing us to serve the community with affordable,
        regular, high-quality entertainment while simplifying the production process for both seasoned and first-time promoters.
      </p>
      <blockquote className="italic border-l-4 border-red-600 pl-4 mb-4">
        “They were easy to work with and professional.” — Client Testimonial
      </blockquote>
      <p className="mb-4">
        <strong>About the Owner:</strong> I’m Michael Kyle — founder, owner, and operator of MKM Entertainment.
        I’m hands-on in every part of the process and committed to expanding our reach over the next few years.
        A great night for me is a smooth-flowing show with a good turnout and great vibes — when everyone works
        together to deliver an amazing experience.
      </p>
      <p>
        We operate out of Jacksonville, IL, and are directly partnered with Pizza Records for the majority of our events.
        We’ll travel anywhere in Illinois, with mileage charged outside our local area. I’m also a proud member of Harmony Lodge No. 3.
      </p>
    </div>
  </div>
</section>


/* API endpoint (hard-coded to your current production deployment) */
const API_URL =
  "https://mkm-site-ltruqhqvp-mdog48765s-projects.vercel.app/api/send-email";

export default function App() {
  const [logoBroken, setLogoBroken] = useState(false);

  // Booking/cart state
  const [bookingType, setBookingType] = useState("Pizza Records"); // "Pizza Records" | "External"
  const [selectedService, setSelectedService] = useState(""); // package name
  const [addOns, setAddOns] = useState([]); // only for External

  // Form state
  const [submitting, setSubmitting] = useState(false);
  const [sent, setSent] = useState(false);
  const [errorMsg, setErrorMsg] = useState("");

  /* ===== Packages & Add-ons ===== */
  const pizzaPackages = useMemo(
    () => [
      { title: "Pizza Records – Basic", price: "$250", features: ["Venue space and sound"] },
      { title: "Pizza Records – Preferred", price: "$300", features: ["Venue space", "Sound", "Lighting"] },
      {
        title: "Pizza Records – Preferred PLUS",
        price: "$350",
        popular: true,
        features: ["Venue Space", "Sound", "Lighting", "Multi-track sound recording (No mastering, only files)"],
      },
      {
        title: "Pizza Records – Premium",
        price: "$450",
        features: [
          "Venue space",
          "Sound",
          "Lighting",
          "Projected Visuals",
          "Multi-track sound recording with Mastering",
          "Video recording and editing",
        ],
      },
    ],
    []
  );

  const externalPackages = useMemo(
    () => [
      {
        title: "External – Compact PA",
        price: "$250/day",
        features: [
          "2× QSC K12.2 tops",
          "1× QSC KS118 sub",
          "2 floor monitors",
          "2 wireless mics",
          "Basic mixer",
          "Delivery & setup included",
          "Operator included",
        ],
      },
      {
        title: "External – Full PA",
        price: "$350/day",
        popular: true,
        features: [
          "2× QSC K12.2 tops",
          "2× QSC KS118 subs",
          "4 floor monitors",
          "Full mic kit",
          "TouchMix 16 with operator",
          "Delivery & setup included",
          "Operator included",
        ],
      },
      {
        title: "External – Festival Rig",
        price: "$400/day",
        features: [
          "2× QSC K12.2 tops",
          "3× QSC KS118 subs",
          "4 floor monitors",
          "Full mic kit",
          "TouchMix 16 with operator",
          "Delivery & setup included",
          "Operator included",
        ],
      },
    ],
    []
  );

  const externalAddOns = useMemo(
    () => [
      { key: "Standard Lighting — $50", label: "Standard Lighting — $50 (4 small PARs, 2 thick PARs, DMX control)" },
      {
        key: "Moving Lights & Special FX — $100",
        label:
          "Moving Lights & Special FX — $100 (incl. Standard, +2 moving heads, 2 spider lights, laser box, fog)",
      },
      { key: "Full Lighting Show — $150", label: "Full Lighting Show — $150 (all above + 4 DJ boxes, 15 ft truss)" },
      { key: "Projected Visuals — $150", label: "Projected Visuals — $150 (1080p UST projector & screen)" },
      {
        key: "Live Multitrack Recording — $50",
        label: "Live Multitrack Recording — $50 (per-channel capture for post mix/master)",
      },
    ],
    []
  );

  /* ===== Helpers ===== */
  function scrollToId(id) {
    const el = document.querySelector(id);
    if (!el) return;
    const y = el.getBoundingClientRect().top + window.scrollY - 80;
    window.scrollTo({ top: y, behavior: "smooth" });
  }

  function selectPackage(title) {
    setSelectedService(title);
    if (bookingType === "External") {
      scrollToId("#addons");
    } else {
      scrollToId("#cart");
    }
  }

  function toggleAddOn(key) {
    setAddOns((prev) => (prev.includes(key) ? prev.filter((k) => k !== key) : [...prev, key]));
  }

  function clearCart() {
    setSelectedService("");
    setAddOns([]);
  }

  function AboutSection() {
  return (
    <section id="about" className="py-16 border-t border-white/10">
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div className="grid gap-10 md:grid-cols-3 items-start">
          {/* Photo + caption */}
          <div className="md:col-span-1">
            <img
              src="/images/michael-mixing.jpg"
              alt="Michael Kyle mixing a live event"
              className="rounded-2xl border border-white/10 object-cover w-full"
            />
            <p className="text-sm text-white/50 mt-2 italic text-center">Humble Beginnings</p>
          </div>

          {/* Text */}
          <div className="md:col-span-2">
            <h2 className="text-3xl sm:text-4xl font-bold">About MKM Entertainment</h2>
            <div className="mt-6 space-y-4 text-white/80">
              <p>
                MKM Entertainment started with a small, well-used, “Frankensteined” sound system and a mission:
                deliver affordable, quality sound to anyone ready to step into the world of live entertainment.
                From weddings to raves, rock shows to hip hop nights, and everything in between — we’ve done it all.
              </p>
              <p>
                Now in our third year of professionally running sound and lighting, we’ve grown into a trusted partner
                for events across Illinois.
              </p>
              <p>
                While we don’t currently handle sound for crowds over 400, we’re scaling toward serving all markets — big
                and small — with the same focus: quality production at fair prices. Our QSC rig is crystal-clear, plenty loud,
                and dynamic enough for everything from speeches and corporate events to local music festivals.
              </p>
              <p>
                We keep the whole process streamlined and stress-free — from booking to showtime to teardown — with clear
                communication and a balance of professionalism and customer care.
              </p>
              <p>
                Our partnership with Pizza Records has been pivotal to our growth, serving the community with affordable,
                regular, high-quality entertainment while simplifying production for both seasoned and first-time promoters.
              </p>
              <blockquote className="italic border-l-4 border-red-600 pl-4">
                “They were easy to work with and professional.”
              </blockquote>
              <p>
                <strong>About the Owner:</strong> I’m Michael Kyle — founder, owner, and operator of MKM Entertainment.
                I’m hands-on every step and committed to expanding our reach. A great night is a smooth-flowing show with
                great vibes — everyone working together to deliver an amazing experience.
              </p>
              <p>
                Based in Jacksonville, IL. Directly partnered with Pizza Records. We travel anywhere in Illinois (mileage
                applies outside the local area). Proud member of Harmony Lodge No. 3.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}


  /* ===== Submit (Server API) ===== */
  async function handleSubmit(e) {
    e.preventDefault();
    if (submitting) return;
    setSubmitting(true);
    setSent(false);
    setErrorMsg("");

    const formEl = e.currentTarget;
    const form = new FormData(formEl);

    const isPizzaBooking = bookingType === "Pizza Records";
    const subjectTag = isPizzaBooking ? "[Pizza Records]" : "[External]";
    const chosenService =
      selectedService || form.get("service") || (isPizzaBooking ? "Pizza Records – Basic" : "External – Compact PA");

    const payload = {
      name: form.get("name") || "",
      email: form.get("email") || "",
      phone: form.get("phone") || "",
      service: form.get("service") || "",
      date: form.get("date") || "",
      message: form.get("message") || "",
      bookingType,
      selectedService: selectedService || "",
      addOns: isPizzaBooking ? [] : addOns,
      subject: `${subjectTag} ${chosenService} — Booking Request`,
      // NOTE: Recipient routing is handled server-side in /api/send-email
    };

    try {
  const res = await fetch("/api/send-email", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  });

  // Try to read server response (even on errors)
  const json = await res.json().catch(() => ({}));

  if (!res.ok) {
    console.error("Send failed:", res.status, json);
    throw new Error(json?.error || `Request failed (${res.status})`);
  }

  // Optional: see who the server actually sent to
  if (json?.results) {
    console.log("Server sent to:", json.results.map(r => r.to));
  }

  setSent(true);
  formEl.reset();
  clearCart();
} catch (err) {
  console.error("Send error:", err);
  setErrorMsg(err?.message || "Something went wrong sending your request.");
} finally {
  setSubmitting(false);
}
  }

  /* ===== UI ===== */
  return (
    <div className="min-h-screen bg-black text-white selection:bg-red-600/40">
      {/* Header */}
      <header className="sticky top-0 z-40 bg-black/70 backdrop-blur border-b border-white/10">
        <div className="mx-auto max-w-7xl h-16 px-4 sm:px-6 lg:px-8 flex items-center justify-between">
          <a href="#home" className="flex items-center gap-3">
            {logoBroken ? (
              <div className="h-20 w-20 rounded bg-red-600" aria-label="MKM Logo" />
            ) : (
              <img
                src={LOGO_SRC}
                alt="MKM Logo"
                className="h-20 w-20 object-contain"
                onError={() => setLogoBroken(true)}
              />
            )}
            {/* Text label removed per your request */}
          </a>
          <nav className="flex items-center gap-8 text-sm">
            <a href="#about" className="hover:text-red-400">About</a>
            <a href="#book" className="hover:text-red-400">Book</a>
            <a href="#gallery" className="hover:text-red-400">Gallery</a>
            <a href="#contact" className="inline-flex items-center rounded-full bg-red-600 px-4 py-2 font-medium hover:bg-red-500 transition">
               Contact
            </a>
          </nav>

        </div>
      </header>

      {/* Hero */}
      <section id="home" className="relative overflow-hidden">
        <div className="absolute inset-0 pointer-events-none" aria-hidden="true">
          <div className="absolute -top-40 -left-40 h-96 w-96 rounded-full bg-red-600/20 blur-3xl" />
          <div className="absolute -bottom-40 -right-40 h-96 w-96 rounded-full bg-white/5 blur-3xl" />
        </div>
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-16 lg:py-24">
          <p className="text-sm text-white/60">Jacksonville, Illinois • Weekends at Pizza Records</p>
          <h1 className="mt-3 text-4xl sm:text-5xl lg:text-6xl font-extrabold leading-tight">We Don’t Do Quiet.</h1>
          <p className="mt-4 max-w-2xl text-white/80">
            Full-service shows at Pizza Records and professional sound equipment rentals.
            Modern, sleek production by design.
          </p>
          <div className="mt-8">
            <a
              href="#book"
              className="inline-flex items-center rounded-full bg-red-600 px-6 py-3 font-semibold hover:bg-red-500 transition"
            >
              Book Now
            </a>
          </div>
        </div>
      </section>

      {/* Gallery (directly under Hero) */}
      <section id="gallery" className="py-16 border-t border-white/10">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl sm:text-4xl font-bold">Recent Events</h2>
          <div className="mt-8 grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
            {GALLERY_IMAGES.map((src, i) => (
              <img
                key={src}
                src={src}
                alt={`Event photo ${i + 1}`}
                className="aspect-video object-cover rounded-xl border border-white/10"
                loading="lazy"
              />
            ))}
          </div>
        </div>
      </section>

      {/* About */}
      <AboutSection />

      {/* Booking */}
      <section id="book" className="py-16 border-t border-white/10">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl sm:text-4xl font-bold">Book a Show</h2>
          <p className="mt-3 text-white/70">Choose the location, pick a package, and (for External) add any extras.</p>

          {/* Tabs */}
          <div className="mt-6 inline-flex rounded-full border border-white/10 bg-white/5 p-1 shadow-sm">
            {["Pizza Records", "External"].map((t) => {
              const active = bookingType === t;
              return (
                <button
                  key={t}
                  onClick={() => {
                    setBookingType(t);
                    setSelectedService("");
                    if (t === "Pizza Records") setAddOns([]);
                  }}
                  aria-selected={active}
                  className={`px-4 py-2 rounded-full text-sm font-medium transition outline-none ${
                    active
                      ? "bg-red-600 shadow ring-1 ring-red-400/40"
                      : "hover:bg-white/10 focus-visible:ring-2 focus-visible:ring-white/40"
                  }`}
                >
                  {t === "External" ? "External Booking" : "Pizza Records"}
                </button>
              );
            })}
          </div>

          {/* Content */}
          <div className="mt-8 grid gap-8 lg:grid-cols-3">
            {/* Packages */}
            <div className="lg:col-span-2 space-y-8">
              {bookingType === "Pizza Records" && (
                <div className="grid gap-6 sm:grid-cols-2 xl:grid-cols-3">
                  {pizzaPackages.map((p) => (
                    <div
                      key={p.title}
                      className={`rounded-2xl border border-white/10 bg-gradient-to-br from-white/[0.06] to-white/[0.02] p-6 flex flex-col
                        ${
                          selectedService === p.title
                            ? "ring-2 ring-red-500"
                            : "hover:shadow-[0_6px_24px_rgba(0,0,0,0.35)] hover:-translate-y-0.5 transition"
                        }`}
                    >
                      {p.popular && (
                        <span className="self-end -mt-3 mb-2 inline-flex items-center rounded-full bg-red-600 px-2 py-1 text-xs font-semibold shadow">
                          Most popular
                        </span>
                      )}
                      <h3 className="text-lg font-semibold">{p.title}</h3>
                      <p className="mt-1 text-2xl font-extrabold text-red-400">{p.price}</p>
                      {p.features?.length > 0 && (
                        <ul className="mt-4 space-y-2 text-sm text-white/80">
                          {p.features.map((f) => (
                            <li key={f} className="flex items-start gap-2">
                              <span className="mt-1 h-1.5 w-1.5 rounded-full bg-red-500" />
                              <span>{f}</span>
                            </li>
                          ))}
                        </ul>
                      )}
                      <button
                        onClick={() => selectPackage(p.title)}
                        className="mt-6 inline-flex rounded-full bg-red-600 px-4 py-2 text-sm font-semibold hover:bg-red-500"
                      >
                        {selectedService === p.title ? "Selected" : "Select"}
                      </button>
                    </div>
                  ))}
                </div>
              )}

              {bookingType === "External" && (
                <>
                  <div className="grid gap-6 sm:grid-cols-2 xl:grid-cols-3">
                    {externalPackages.map((p) => (
                      <div
                        key={p.title}
                        className={`rounded-2xl border border-white/10 bg-gradient-to-br from-white/[0.06] to-white/[0.02] p-6 flex flex-col
                          ${
                            selectedService === p.title
                              ? "ring-2 ring-red-500"
                              : "hover:shadow-[0_6px_24px_rgba(0,0,0,0.35)] hover:-translate-y-0.5 transition"
                          }`}
                      >
                        {p.popular && (
                          <span className="self-end -mt-3 mb-2 inline-flex items-center rounded-full bg-red-600 px-2 py-1 text-xs font-semibold shadow">
                            Most popular
                          </span>
                        )}
                        <h3 className="text-lg font-semibold">{p.title}</h3>
                        <p className="mt-1 text-2xl font-extrabold text-red-400">{p.price}</p>
                        <ul className="mt-4 space-y-2 text-sm text-white/80">
                          {p.features?.map((f) => (
                            <li key={f} className="flex items-start gap-2">
                              <span className="mt-1 h-1.5 w-1.5 rounded-full bg-red-500" />
                              <span>{f}</span>
                            </li>
                          ))}
                        </ul>
                        <button
                          onClick={() => selectPackage(p.title)}
                          className="mt-6 inline-flex rounded-full bg-red-600 px-4 py-2 text-sm font-semibold hover:bg-red-500"
                        >
                          {selectedService === p.title ? "Selected" : "Select"}
                        </button>
                      </div>
                    ))}
                  </div>

                  {/* Add-ons */}
                  <div id="addons" className="rounded-2xl border border-white/10 p-6 bg-white/[0.04]">
                    <h4 className="text-base font-semibold">Add-ons</h4>
                    <div className="mt-4 grid gap-3 sm:grid-cols-2">
                      {externalAddOns.map((a) => (
                        <label
                          key={a.key}
                          className={`flex items-center gap-3 rounded-lg border border-white/10 px-3 py-2 cursor-pointer
                            ${addOns.includes(a.key) ? "bg-white/[0.08]" : "bg-white/[0.03] hover:bg-white/[0.06]"}`}
                        >
                          <input
                            type="checkbox"
                            className="h-4 w-4 accent-red-600"
                            checked={addOns.includes(a.key)}
                            onChange={() => toggleAddOn(a.key)}
                          />
                          <span className="text-sm">{a.label}</span>
                        </label>
                      ))}
                    </div>
                    <p className="mt-3 text-xs text-white/60">
                      Operator included when we run equipment. Travel outside local area billed at $0.50/mi (round
                      trip).
                    </p>
                  </div>
                </>
              )}
            </div>

            {/* Cart */}
            <aside
              id="cart"
              className="lg:sticky lg:top-24 h-fit rounded-2xl border border-white/10 p-6 bg-gradient-to-br from-white/5 to-white/[0.02]"
            >
              <h3 className="text-xl font-semibold">Your Selection</h3>
              <dl className="mt-4 space-y-2 text-sm">
                <div className="grid grid-cols-4 gap-2">
                  <dt className="col-span-2 text-white/60">Booking Type</dt>
                  <dd className="col-span-2">{bookingType}</dd>
                </div>
                <div className="grid grid-cols-4 gap-2">
                  <dt className="col-span-2 text-white/60">Package</dt>
                  <dd className="col-span-2">{selectedService || "—"}</dd>
                </div>
                {bookingType === "External" && (
                  <div className="grid grid-cols-4 gap-2">
                    <dt className="col-span-2 text-white/60">Add-ons</dt>
                    <dd className="col-span-2">{addOns.length ? addOns.join(", ") : "None"}</dd>
                  </div>
                )}
              </dl>

              <div className="mt-6 flex gap-3">
                <button
                  onClick={() => {
                    setSelectedService("");
                    setAddOns([]);
                  }}
                  className="inline-flex rounded-full border border-white/20 px-4 py-2 text-sm hover:border-white/40"
                >
                  Clear
                </button>
                <button
                  onClick={() => scrollToId("#contact")}
                  className="inline-flex rounded-full bg-red-600 px-4 py-2 text-sm font-semibold hover:bg-red-500"
                >
                  Proceed to Contact
                </button>
              </div>

              <p className="mt-3 text-xs text-white/60">This summary is included in your booking request.</p>
            </aside>
          </div>
        </div>
      </section>

      {/* Contact & Booking */}
      <section id="contact" className="py-16 border-t border-white/10">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl sm:text-4xl font-bold">Contact & Booking</h2>
          <p className="mt-3 text-white/70 max-w-2xl">Tell us about your event and we’ll get you on the calendar.</p>

          <div className="mt-10 grid gap-8 lg:grid-cols-2">
            {/* Form */}
            <form onSubmit={handleSubmit} noValidate className="rounded-2xl border border-white/10 bg-white/5 p-6">
              <div className="grid gap-4 sm:grid-cols-2">
                <div className="sm:col-span-2">
                  <label className="text-sm text-white/80">Your Name</label>
                  <input
                    name="name"
                    type="text"
                    required
                    className="mt-1 w-full rounded-lg bg-black/40 border border-white/10 px-3 py-2 outline-none focus:ring-2 focus:ring-red-600"
                  />
                </div>
                <div>
                  <label className="text-sm text-white/80">Email</label>
                  <input
                    name="email"
                    type="email"
                    required
                    className="mt-1 w-full rounded-lg bg-black/40 border border-white/10 px-3 py-2 outline-none focus:ring-2 focus:ring-red-600"
                  />
                </div>
                <div>
                  <label className="text-sm text-white/80">Phone</label>
                  <input
                    name="phone"
                    type="tel"
                    className="mt-1 w-full rounded-lg bg-black/40 border border-white/10 px-3 py-2 outline-none focus:ring-2 focus:ring-red-600"
                  />
                </div>

                {/* Service (controlled & synced with cart) */}
                <div>
                  <label className="text-sm text-white/80">Service</label>
                  <select
                    name="service"
                    value={
                      selectedService || (bookingType === "External" ? "External – Compact PA" : "Pizza Records – Basic")
                    }
                    onChange={(e) => {
                      const next = e.target.value;
                      setSelectedService(next);
                      const nextType = next.startsWith("External") ? "External" : "Pizza Records";
                      setBookingType(nextType);
                      if (nextType === "Pizza Records") setAddOns([]);
                    }}
                    className="mt-1 w-full rounded-lg bg-black/40 border border-white/10 px-3 py-2 outline-none focus:ring-2 focus:ring-red-600"
                  >
                    {pizzaPackages.map((p) => (
                      <option key={p.title}>{p.title}</option>
                    ))}
                    {externalPackages.map((p) => (
                      <option key={p.title}>{p.title}</option>
                    ))}
                  </select>
                </div>

                <div>
                  <label className="text-sm text-white/80">Target Date</label>
                  <input
                    name="date"
                    type="date"
                    className="mt-1 w-full rounded-lg bg-black/40 border border-white/10 px-3 py-2 outline-none focus:ring-2 focus:ring-red-600"
                  />
                </div>

                <div className="sm:col-span-2">
                  <label className="text-sm text-white/80">Message</label>
                  <textarea
                    name="message"
                    rows={5}
                    placeholder="event details, number of vendors (including yourself) expected to sell merch)."
                    className="mt-1 w-full rounded-lg bg-black/40 border border-white/10 px-3 py-2 outline-none focus:ring-2 focus:ring-red-600"
                    required
                  />
                </div>
              </div>

              <div className="mt-6 flex items-center gap-3">
                <button
                  type="submit"
                  disabled={submitting}
                  className={`inline-flex items-center rounded-full px-6 py-3 font-semibold transition ${
                    submitting ? "bg-red-800 cursor-not-allowed" : "bg-red-600 hover:bg-red-500"
                  }`}
                >
                  {submitting ? "Sending…" : "Send Booking Request"}
                </button>
                <p className="text-sm text-white/60">
                  Direct email:{" "}
                  <a className="hover:text-red-400" href={`mailto:${CONTACT_EMAIL}`}>
                    {CONTACT_EMAIL}
                  </a>
                </p>
              </div>

              {sent && (
                <div className="mt-4 rounded-lg border border-green-500/30 bg-green-500/10 p-3 text-sm">
                  Thanks! Your request was sent. I’ll follow up at the email you provided.
                </div>
              )}
              {!!errorMsg && (
                <div className="mt-4 rounded-lg border border-red-500/30 bg-red-500/10 p-3 text-sm">
                  Couldn’t send your request: {errorMsg}
                </div>
              )}
            </form>

            {/* Venue info */}
            <div className="rounded-2xl border border-white/10 p-6 bg-gradient-to-br from-white/5 to-white/[0.02]">
              <h3 className="text-xl font-semibold">Rent Pizza Records</h3>
              <div className="mt-4 grid gap-3 text-sm">
                <InfoRow label="Venue" value="Pizza Records (Jacksonville, IL)" />
                <InfoRow
                  label="Phone"
                  value={<a className="hover:text-red-400" href={`tel:${PIZZA_RECORDS_PHONE_TEL}`}>{PIZZA_RECORDS_PHONE_DISPLAY}</a>}
                />
                <InfoRow
                  label="Email"
                  value={<a className="hover:text-red-400" href={`mailto:${PIZZA_RECORDS_EMAIL}`}>{PIZZA_RECORDS_EMAIL}</a>}
                />
                <InfoRow label="Address" value={VENUE_ADDRESS} />
              </div>

              <div className="mt-8 aspect-video w-full rounded-xl border border-white/10 overflow-hidden">
                <iframe
                  title="Pizza Records Map"
                  src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3067.765392391368!2d-90.23048392336818!3d39.732049071558336!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x87e9e2f2d7b99f93%3A0x7a1f9e55fdc2dd3!2s59%20E%20Central%20Park%20Plaza%2C%20Jacksonville%2C%20IL%2062650!5e0!3m2!1sen!2sus!4v1699999999999!5m2!1sen!2sus"
                  width="100%"
                  height="100%"
                  style={{ border: 0 }}
                  allowFullScreen
                  loading="lazy"
                />
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="border-t border-white/10 py-10">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 text-sm flex flex-col md:flex-row items-center justify-between gap-4">
          <p className="text-white/60">© {new Date().getFullYear()} MKM Entertainment LLC. All rights reserved.</p>
          <div className="flex items-center gap-6">
            <a href="#book" className="hover:text-red-400">Book</a>
            <a href="#gallery" className="hover:text-red-400">Gallery</a>
            <a href="#contact" className="hover:text-red-400">Contact</a>
          </div>
          <div className="text-white/60">
            MKM Line:{" "}
            <a className="hover:text-red-400" href={`tel:${BUSINESS_PHONE_TEL}`}>
              {BUSINESS_PHONE_DISPLAY}
            </a>
          </div>
        </div>
      </footer>
    </div>
  );
}

/* Reusable */
function InfoRow({ label, value }) {
  return (
    <div className="grid grid-cols-4 gap-2">
      <div className="col-span-1 text-white/60">{label}</div>
      <div className="col-span-3">{value}</div>
    </div>
  );
}